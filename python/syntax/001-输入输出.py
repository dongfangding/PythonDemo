"""
多行注释的方式

记录输入输出的主要方法
print 用来将结果输出到终端
input 用来接收终端输入

print的语法
print(*objects, sep=' ', end='\n', file=sys.stdout)
    objects -- 复数，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔。
    sep -- 用来间隔多个对象，默认值是一个空格。
    end -- 用来设定以什么结尾。默认值是换行符 \n，我们可以换成其他字符串。
    file -- 要写入的文件对象。
"""
# 输出非字符常数
print(100)
# 输出字符串，使用单引号包裹
print('输出字符串')
# 可以使用,来分割多个输出
print('100 + 200 = ', 100 + 200)
# 不换行输出, 固定格式end = '', end代表以什么结尾，默认是换行符，我们改成空串即可
print('我们都是中', end='')
# 这一行打完要换行，但是上一行没换行，所以两行的输出会连接在一起再换行
print('国人')
# 格式化,%d 数字, 格式化之后的值使用 % 连接，如果有多个值使用括号一一与占位符对应即可
print('100 + 200 = %d' % (100 + 200))
# 格式化,%s 字符
print('%s都是%s人' % ('我们', '中国'))
# 格式化浮点数小数位
print('%.2f %.3f' % (3.1415926, 3.1415926))

"""
input 接收终端输入
终端接收的值都是字符，如果需要当做整型来用，需要显示的自己转换
"""
# 接收两个值，然后计算两个值的和, 这里的int是将接收的值转换为整型
num1 = int(input('请输入第一个值: '))
num2 = int(input('请输入第二个值: '))
print('%d + %d = %d' % (num1, num2, (num1 + num2)))
